{"ast":null,"code":"import { Estado } from '../models/Estado';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/casilla.service\";\nimport * as i2 from \"../services/dificultad.service\";\nimport * as i3 from \"@angular/common\";\nfunction BoardComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function BoardComponent_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.reiniciar());\n    });\n    i0.ɵɵtext(1, \" Reintentar \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BoardComponent_div_6_tr_2_td_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cell_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cell_r10.minasAlrededor, \" \");\n  }\n}\nfunction BoardComponent_div_6_tr_2_td_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \" \\uD83D\\uDCA3 \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"closedCell\": a0\n  };\n};\nfunction BoardComponent_div_6_tr_2_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 9);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_6_tr_2_td_1_Template_td_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const x_r11 = restoredCtx.index;\n      const y_r8 = i0.ɵɵnextContext().index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.gameState == 1 && ctx_r15.checkCell(y_r8, x_r11));\n    })(\"contextmenu\", function BoardComponent_div_6_tr_2_td_1_Template_td_contextmenu_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r18 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r18.gameState == 1);\n    });\n    i0.ɵɵtemplate(1, BoardComponent_div_6_tr_2_td_1_div_1_Template, 2, 1, \"div\", 10);\n    i0.ɵɵtemplate(2, BoardComponent_div_6_tr_2_td_1_div_2_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cell_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, cell_r10.status != \"open\" && !(ctx_r9.gameState == 0 && cell_r10.mina)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", cell_r10.status == \"open\" && cell_r10.minasAlrededor != 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", cell_r10.status == \"mine\");\n  }\n}\nfunction BoardComponent_div_6_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, BoardComponent_div_6_tr_2_td_1_Template, 3, 5, \"td\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const rows_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", rows_r7);\n  }\n}\nfunction BoardComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"table\", 6);\n    i0.ɵɵtemplate(2, BoardComponent_div_6_tr_2_Template, 2, 1, \"tr\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.board);\n  }\n}\nfunction BoardComponent_h3_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\");\n    i0.ɵɵtext(1, \" Ganaste. Juego Terminado \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BoardComponent_h3_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\");\n    i0.ɵɵtext(1, \" Perdiste. Juego Terminado \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class BoardComponent {\n  constructor(cellService, dificultadService) {\n    this.cellService = cellService;\n    this.dificultadService = dificultadService;\n    this.board = [];\n    this.gameState = Estado.activo;\n    this.difficulty = '';\n    this.rows = 5;\n    this.columns = 5;\n    this.numberOfMines = 0;\n    this.difficulty = \"Facil\";\n    this.celdas = {\n      cellsOpened: 0,\n      cells: this.rows * this.columns,\n      numberMines: this.numberOfMines\n    };\n    this.changeDifficulty();\n    console.log(this.difficulty);\n  }\n  ngOnInit() {\n    this.dificultadService.dificultadSeleccionada$.subscribe(dificultad => {\n      this.difficulty = dificultad; // Recibe la dificultad seleccionada del servicio\n      console.log(this.difficulty);\n      this.changeDifficulty(); // Llama a la función para cambiar la dificultad cuando se recibe una nueva\n    });\n  }\n\n  checkCell(row, column) {\n    this.cellService.abrirCelda(this.board, row, column, this.rows, this.columns, this.celdas);\n    this.gameState = this.cellService.cambiarEstado(this.board, row, column, this.celdas, this.numberOfMines, this.gameState);\n  }\n  reiniciar() {\n    this.board = this.cellService.generarTablero(this.rows, this.columns, this.numberOfMines);\n    this.gameState = Estado.activo;\n    this.celdas = {\n      cellsOpened: 0,\n      cells: this.rows * this.columns,\n      numberMines: this.numberOfMines\n    };\n  }\n  changeDifficulty() {\n    let changes = this.cellService.Dificultad(this.difficulty);\n    this.rows = changes[0];\n    this.columns = changes[1];\n    this.numberOfMines = changes[2];\n    this.reiniciar();\n  }\n}\nBoardComponent.ɵfac = function BoardComponent_Factory(t) {\n  return new (t || BoardComponent)(i0.ɵɵdirectiveInject(i1.CasillaService), i0.ɵɵdirectiveInject(i2.DificultadService));\n};\nBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BoardComponent,\n  selectors: [[\"app-board\"]],\n  decls: 11,\n  vars: 6,\n  consts: [[1, \"reinicio\"], [3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"Victoria\"], [1, \"Derrota\"], [3, \"click\"], [1, \"Game\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"click\", \"contextmenu\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"click\", \"contextmenu\"], [\"class\", \"celdas\", 4, \"ngIf\"], [\"class\", \"mina\", 4, \"ngIf\"], [1, \"celdas\"], [1, \"mina\"]],\n  template: function BoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 0);\n      i0.ɵɵtemplate(5, BoardComponent_button_5_Template, 2, 0, \"button\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, BoardComponent_div_6_Template, 3, 1, \"div\", 2);\n      i0.ɵɵelementStart(7, \"div\", 3);\n      i0.ɵɵtemplate(8, BoardComponent_h3_8_Template, 2, 0, \"h3\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 4);\n      i0.ɵɵtemplate(10, BoardComponent_h3_10_Template, 2, 0, \"h3\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"Dificultad: \", ctx.difficulty, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Numero de minas: \", ctx.numberOfMines, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.gameState == 0 || ctx.gameState == 2);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.gameState == 1 || ctx.gameState == 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.gameState == 2);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.gameState == 0);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf],\n  styles: [\".Game[_ngcontent-%COMP%]{\\r\\n    border: 3px solid rgb(0, 0, 0);\\r\\n    border-collapse: collapse;\\r\\n}\\r\\n\\r\\ntd[_ngcontent-%COMP%]{\\r\\n    border: 1px solid rgb(89, 89, 89);\\r\\n    border-collapse: collapse;\\r\\n    width: 35px;\\r\\n    height: 35px;\\r\\n}\\r\\n\\r\\n.closedCell[_ngcontent-%COMP%]{\\r\\n    background-color: rgb(0, 0, 0)\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYm9hcmQvYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDhCQUE4QjtJQUM5Qix5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxpQ0FBaUM7SUFDakMseUJBQXlCO0lBQ3pCLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0k7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5HYW1le1xyXG4gICAgYm9yZGVyOiAzcHggc29saWQgcmdiKDAsIDAsIDApO1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxufVxyXG5cclxudGR7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoODksIDg5LCA4OSk7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgd2lkdGg6IDM1cHg7XHJcbiAgICBoZWlnaHQ6IDM1cHg7XHJcbn1cclxuXHJcbi5jbG9zZWRDZWxse1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDAsIDApXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Estado","i0","ctx_r15","BoardComponent","constructor","cellService","dificultadService","activo","rows","columns","numberOfMines","difficulty","celdas","cellsOpened","cells","numberMines","changeDifficulty","console","log","ngOnInit","dificultadSeleccionada$","subscribe","dificultad","checkCell","row","column","abrirCelda","board","gameState","cambiarEstado","reiniciar","generarTablero","changes","Dificultad","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["F:\\Diky\\Desktop\\Programacio II\\Buscaminas\\src\\app\\board\\board.component.ts","F:\\Diky\\Desktop\\Programacio II\\Buscaminas\\src\\app\\board\\board.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { DificultadService } from '../services/dificultad.service';\r\nimport { Casilla } from '../models/Casilla';\r\nimport { CasillaService } from '../services/casilla.service';\r\nimport { Estado } from '../models/Estado';\r\n\r\n@Component({\r\n  selector: 'app-board',\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.css']\r\n})\r\nexport class BoardComponent implements OnInit {\r\n  board: Casilla[][] = [];\r\n  gameState: Estado = Estado.activo;\r\n  difficulty: string = '';\r\n\r\n  rows: number;\r\n  columns: number;\r\n  numberOfMines: number;\r\n  celdas: any;\r\n\r\n  constructor(\r\n    private cellService: CasillaService,\r\n    private dificultadService: DificultadService\r\n  ) {\r\n    this.rows= 5;\r\n    this.columns = 5;\r\n    this.numberOfMines = 0;\r\n    this.difficulty = \"Facil\";\r\n    this.celdas = {cellsOpened: 0, cells: this.rows * this.columns, numberMines: this.numberOfMines};\r\n    this.changeDifficulty();\r\n    console.log(this.difficulty);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dificultadService.dificultadSeleccionada$.subscribe(dificultad => {\r\n      this.difficulty = dificultad; // Recibe la dificultad seleccionada del servicio\r\n      console.log(this.difficulty);\r\n      this.changeDifficulty(); // Llama a la función para cambiar la dificultad cuando se recibe una nueva\r\n    });\r\n  }\r\n\r\n  checkCell(row: number, column: number) {\r\n    this.cellService.abrirCelda(this.board, row, column, this.rows, this.columns, this.celdas);\r\n    this.gameState = this.cellService.cambiarEstado(this.board, row, column, this.celdas, this.numberOfMines, this.gameState);\r\n  }\r\n\r\n  reiniciar() {\r\n    this.board = this.cellService.generarTablero(this.rows, this.columns, this.numberOfMines);\r\n    this.gameState = Estado.activo;\r\n    this.celdas = { cellsOpened: 0, cells: this.rows * this.columns, numberMines: this.numberOfMines };\r\n  }\r\n\r\n  changeDifficulty() {\r\n    let changes: [number, number, number] = this.cellService.Dificultad(this.difficulty);\r\n    this.rows = changes[0];\r\n    this.columns = changes[1];\r\n    this.numberOfMines = changes[2];\r\n    this.reiniciar();\r\n  }\r\n}\r\n","\r\n<p>Dificultad: {{difficulty}}</p>\r\n\r\n<p>Numero de minas: {{numberOfMines}}</p>\r\n\r\n<div class=\"reinicio\">\r\n    <button (click)=\"reiniciar()\" *ngIf=\"gameState == 0 || gameState == 2\">\r\n        Reintentar\r\n    </button>\r\n</div>\r\n\r\n<div *ngIf=\"gameState == 1 || gameState == 0\">\r\n    <table class=\"Game\">\r\n        <tr *ngFor=\"let rows of board; let y = index;\">\r\n            <td *ngFor=\"let cell of rows; let x = index;\" \r\n            (click)=\"gameState == 1 && checkCell(y, x)\" \r\n            (contextmenu)=\"gameState == 1\" \r\n            [ngClass]=\"{'closedCell': cell.status != 'open' && !(gameState == 0 && cell.mina) }\"\r\n            >\r\n                <div *ngIf=\"cell.status =='open' && cell.minasAlrededor != 0\" class=\"celdas\">\r\n                    {{cell.minasAlrededor}}\r\n                </div>\r\n                <div *ngIf=\"cell.status == 'mine'\" class=\"mina\">\r\n                    💣\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<div class=\"Victoria\">\r\n    <h3 *ngIf=\"gameState == 2\" >\r\n        Ganaste. Juego Terminado\r\n    </h3>\r\n</div>\r\n\r\n<div class=\"Derrota\">\r\n    <h3 *ngIf=\"gameState == 0\" >\r\n        Perdiste. Juego Terminado\r\n    </h3>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}